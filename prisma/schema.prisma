// *** GENERATED BY PRISMIX :: DO NOT EDIT ***
datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch", "fullTextIndex"]
}

model Section {
  ID            Int                  @id @default(autoincrement()) @map("id")
  Code          String               @map("code") @db.VarChar(255)
  Name          String               @map("name") @db.VarChar(255)
  IsActive      IsActive             @default(YES) @map("is_active")
  CreatedAt     DateTime             @default(now()) @map("created_at")
  UpdatedAt     DateTime             @updatedAt @map("updated_at")
  Deleted       DateTime?            @map("deleted_at")
  SubdistrictID Int?                 @map("subdistrict_id") @db.UnsignedInt
  Subdistrict   LocationSubdistrict? @relation(name: "LocationSubdistrictToSection", fields: [SubdistrictID], references: [SubdistrictID], onDelete: Restrict, onUpdate: Restrict)

  @@map("section")
}

model LocationSubdistrict {
  SubdistrictID Int              @id @default(autoincrement()) @map("subdistrict_id") @db.UnsignedInt
  Section       Section[]        @relation(name: "LocationSubdistrictToSection")
  DistrictID    Int              @map("district_id") @db.UnsignedInt
  ZipCode       String           @map("zip_code") @db.VarChar(5)
  NameTH        String           @map("name_th") @db.VarChar(255)
  NameEN        String?          @map("name_en") @db.VarChar(255)
  District      LocationDistrict @relation(name: "LocationDistrictToLocationSubdistrict", fields: [DistrictID], references: [DistrictID], onDelete: Cascade, onUpdate: Cascade)

  @@map("location_subdistrict")
}

model LocationGeography {
  GeographyID Int                @id @default(autoincrement()) @map("geography_id") @db.UnsignedInt
  NameTH      String             @map("name_th") @db.VarChar(255)
  NameEN      String?            @map("name_en") @db.VarChar(255)
  Province    LocationProvince[] @relation(name: "LocationGeographyToLocationProvince")

  @@map("location_geography")
}

model LocationProvince {
  ProvinceID  Int                @id @default(autoincrement()) @map("province_id") @db.UnsignedInt
  GeographyID Int                @map("geography_id") @db.UnsignedInt
  Code        String             @map("code") @db.VarChar(10)
  NameTH      String             @map("name_th") @db.VarChar(255)
  NameEN      String?            @map("name_en") @db.VarChar(255)
  Geography   LocationGeography  @relation(name: "LocationGeographyToLocationProvince", fields: [GeographyID], references: [GeographyID], onDelete: Cascade, onUpdate: Cascade)
  District    LocationDistrict[] @relation(name: "LocationDistrictToLocationProvince")

  @@map("location_province")
}

model LocationDistrict {
  DistrictID  Int                   @id @default(autoincrement()) @map("district_id") @db.UnsignedInt
  ProvinceID  Int                   @map("province_id") @db.UnsignedInt
  Code        String                @map("code") @db.VarChar(10)
  NameTH      String                @map("name_th") @db.VarChar(255)
  NameEN      String?               @map("name_en") @db.VarChar(255)
  Province    LocationProvince      @relation(name: "LocationDistrictToLocationProvince", fields: [ProvinceID], references: [ProvinceID], onDelete: Cascade, onUpdate: Cascade)
  Subdistrict LocationSubdistrict[] @relation(name: "LocationDistrictToLocationSubdistrict")

  @@map("location_district")
}

enum IsActive {
  NO  @map("0")
  YES @map("1")
}
